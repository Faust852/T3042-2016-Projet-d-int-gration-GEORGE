import java.awt.BorderLayout;
import java.awt.Container;
import java.awt.GridLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintStream;
import java.util.Enumeration;
import java.util.HashMap;
import java.util.TooManyListenersException;

import gnu.io.*;
import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JDialog;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;

/**
 * Read from a Serial port, notifying when data arrives.
 * Simulation of part of an event-logging service.
 * @version $Id: SerialReadByEvents.java,v 1.4 2004/04/11 23:50:40 ian Exp $
 * @author  Ian F. Darwin, http://www.darwinsys.com/
 */
public class SerialReadByEvents extends CommPortOpen 
implements SerialPortEventListener {

public static void main(String[] argv)
  throws IOException, NoSuchPortException, PortInUseException,
    UnsupportedCommOperationException {

  new SerialReadByEvents(null).converse();
}

/* Constructor */
public SerialReadByEvents(JFrame f)
  throws IOException, NoSuchPortException, PortInUseException,
    UnsupportedCommOperationException {
  
  super(f);
}

/** 
 * Hold the conversation. 
 */
protected void converse() throws IOException {

  if (!(thePort instanceof SerialPort)) {
    System.err.println("But I wanted a SERIAL port!");
    System.exit(1);
  }
  // Tell the Comm API that we want serial events.
  ((SerialPort)thePort).notifyOnDataAvailable(true);
  try {
    ((SerialPort)thePort).addEventListener(this);
  } catch (TooManyListenersException ev) {
    // "CantHappen" error
    System.err.println("Too many listeners(!) " + ev);
    System.exit(0);
  }

  
}
public void serialEvent(SerialPortEvent ev) {
  String line;
  try {
    line = is.readLine();
    if (line == null) {
      System.out.println("EOF on serial port.");
      System.exit(0);
    }
    os.println(line);
  } catch (IOException ex) {
    System.err.println("IO Error " + ex);
  }
}
}





