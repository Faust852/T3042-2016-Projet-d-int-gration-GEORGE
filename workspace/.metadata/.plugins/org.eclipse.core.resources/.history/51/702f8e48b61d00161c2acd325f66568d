
import gnu.io.*;
import java.awt.EventQueue;

import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;

import javax.swing.JButton;
import java.awt.GridBagLayout;
import java.awt.GridBagConstraints;
import javax.swing.JComboBox;
import java.awt.Insets;
import javax.swing.JTextField;
import javax.swing.SwingUtilities;

import java.awt.event.ActionListener;
import java.io.InputStream;
import java.awt.event.ActionEvent;

public class ReceiveTransmit extends JFrame{
	
	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private JPanel contentPane;
	private JTextField textField;

	JButton btnSearchPorts;
	JComboBox<String> comboBox;
	private JButton btnLimit;
	private JButton btnConnect;
	
	public TwoWaySerialComm TWSC = new TwoWaySerialComm();

	
	/**
	 * Launch the application.
	 */


	/**
	 * Create the frame.
	 */
	public ReceiveTransmit() {
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setBounds(100, 100, 633, 442);
		contentPane = new JPanel();
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));
		setContentPane(contentPane);
		GridBagLayout gbl_contentPane = new GridBagLayout();
		gbl_contentPane.columnWidths = new int[]{203, 440};
		gbl_contentPane.rowHeights = new int[]{25, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0};
		gbl_contentPane.columnWeights = new double[]{0.0, 1.0};
		gbl_contentPane.rowWeights = new double[]{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, Double.MIN_VALUE};
		contentPane.setLayout(gbl_contentPane);

		comboBox = new JComboBox<>();
		GridBagConstraints gbc_comboBox = new GridBagConstraints();
		gbc_comboBox.gridwidth = 2;
		gbc_comboBox.insets = new Insets(0, 0, 5, 0);
		gbc_comboBox.fill = GridBagConstraints.HORIZONTAL;
		gbc_comboBox.gridx = 0;
		gbc_comboBox.gridy = 4;
		contentPane.add(comboBox, gbc_comboBox);
		
		btnSearchPorts = new JButton("Search Ports");
		btnSearchPorts.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				java.util.Enumeration<CommPortIdentifier> portEnum = CommPortIdentifier.getPortIdentifiers();
		        int i = 0;
		        String[] r = new String[5];
		        while (portEnum.hasMoreElements() && i < 5) {
		            CommPortIdentifier portIdentifier = portEnum.nextElement();
		            r[i] = portIdentifier.getName();//+  " - " +  getPortTypeName(portIdentifier.getPortType()) ;
		            i++;
		        }
		        comboBox.setModel(new javax.swing.DefaultComboBoxModel(r));
			}
		});
		GridBagConstraints gbc_btnSearchPorts = new GridBagConstraints();
		gbc_btnSearchPorts.gridwidth = 2;
		gbc_btnSearchPorts.insets = new Insets(0, 0, 5, 0);
		gbc_btnSearchPorts.anchor = GridBagConstraints.NORTH;
		gbc_btnSearchPorts.fill = GridBagConstraints.HORIZONTAL;
		gbc_btnSearchPorts.gridx = 0;
		gbc_btnSearchPorts.gridy = 1;
		contentPane.add(btnSearchPorts, gbc_btnSearchPorts);
		
		btnConnect = new JButton("Connect");
		btnConnect.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				Object selectedItem = comboBox.getSelectedItem();

		        String com = selectedItem.toString();
				try{
		            TWSC.connect(com);
		        }catch ( Exception er ){
		            System.out.println("Ce port n'est pas disponible");
		            JOptionPane.showMessageDialog(null, "Error");
		            er.printStackTrace();
		        }
			}
		});
		GridBagConstraints gbc_btnConnect = new GridBagConstraints();
		gbc_btnConnect.gridwidth = 2;
		gbc_btnConnect.fill = GridBagConstraints.HORIZONTAL;
		gbc_btnConnect.insets = new Insets(0, 0, 5, 0);
		gbc_btnConnect.gridx = 0;
		gbc_btnConnect.gridy = 5;
		contentPane.add(btnConnect, gbc_btnConnect);
		
		btnLimit = new JButton("Limit");
		btnLimit.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				TWSC.sendLimit(textField.getText());
				System.out.println(textField.getText().getBytes());
			}
		});
		GridBagConstraints gbc_btnLimit = new GridBagConstraints();
		gbc_btnLimit.fill = GridBagConstraints.HORIZONTAL;
		gbc_btnLimit.insets = new Insets(0, 0, 5, 5);
		gbc_btnLimit.gridx = 0;
		gbc_btnLimit.gridy = 7;
		contentPane.add(btnLimit, gbc_btnLimit);
		
		textField = new JTextField("value");
		GridBagConstraints gbc_textField = new GridBagConstraints();
		gbc_textField.insets = new Insets(0, 0, 5, 0);
		gbc_textField.fill = GridBagConstraints.BOTH;
		gbc_textField.gridx = 1;
		gbc_textField.gridy = 7;
		contentPane.add(textField, gbc_textField);
		textField.setColumns(10);
		
		
	}
	
	public JTextField getTextField() {
        return textField;
        }
	
	public static void main(String[] args) {
        SwingUtilities.invokeLater(new Runnable() {
                public void run() {
                        ReceiveTransmit inst = new ReceiveTransmit();
                        inst.setLocationRelativeTo(null);
                        inst.setVisible(true);
                       // TWSC.bindKeys(com.serialData, com.sizeOfData);
                }
        }
        );}
	
}





