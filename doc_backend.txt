##################################################
##						##
##	Projet d'integration T3042 2016		##
##						##
##		G E O R G E S			##
##	Documentation 	Back 	End		##
##						##
##	Author : David Micciche 3TL2		##
##						##
##################################################

####################
1. Serveur Cloud 	: DigitalOcean 

	RAM 		: 1Gb
	CPU 		: Xeon E5-2630L 2.40GHz
	Disque		: 20 GB SSD
	IP		: 185.14.186.97/24
	Localis.	: Amsterdam
	Sys.Expl.	: Ubuntu Server 16.04 LTS
####################
2. Virtualisation 	: Docker 1.12.1

	IP range	: 172.17.0.0/24
####################
3. Containers 		: a. Web Stack
			: b. MySQL Server
			: c. DNS server
			: d. VPN server

4. Config Base 		:

	4.1 Ajouter un compte administrateur non-root

		adduser admin sudo

	4.2 Modifier les accès SSH

		PermitRootLogin yes => no
		PasswordAuthentification yes => no

	4.3 Modifier les accès UFW

		P = 22, 80/tcp, 443/tcp, 60000:65535/udp, 
		10000/tcp, 53/tcp, 53/udp

		sudo ufw allow P
		sudo ufw enable

	4.4 Installer WebMin

		sudo nano /etc/apt/sources.list
			deb http://download.webmin.com/download/repository sarge contrib
			deb http://webmin.mirror.somersettechsolutions.co.uk/repository sarge contrib
		wget -q http://www.webmin.com/jcameron-key.asc -O- | sudo apt-key add -
		sudo apt-get update
		sudo apt-get install webmin

	4.5 Installer Fail2Ban, Log, etc... sur WebMin
		sur https://185.14.186.97

5. Config Web Stack	:
	
	le container Web Stack consiste principalement a faire 
	tourner le serveur Apache2 ainsi que ses plugs-in PHP

	Countruire l'image et lancer le container :

		sudo docker build -t faust852/web .
		sudo docker run -idt --name WebStack faust852/web \
			-v /home/apache:/usr/local/apache2/htdocs \
			-v /home/apache/www:/var/www

	-idt fait tourner le container en mode deamon et interactif
	-v cree des volumes partager entre les containers et le VPS

	Confirmer que le container fonctionne :
		
		sudo docker ps
		netstat -tan : devrait afficher le port 80 et 443
		curl http://185.14.186.97 : devrait afficher la source

6. Config MySQL Server	:

	Le container MySQL contient la logique de la base de données
	Toutes les informations (tables et relations) ne sont pas
	sauvegarder dans le container mais partagée dans un volume
	sur le VPS directement, ceci permet de préserver les données
	en cas de corruption du container, tout en relancant l'instance
	facilement et quasi-instantanément en cas de problème

	Countruire l'image et lancer le container :

		sudo docker run -d --name=mysql -e \
		MYSQL_ROOT_PASSWORD='%MYPASSWORD%’\
		-v /storage/mysql/mysql-datadir:/var/lib/mysql mysql



		
